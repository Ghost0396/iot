--------------------------------------------------------
                        TODO
--------------------------------------------------------
Important things to do.
REMEMBER: Always have a week lecture.

VIM 

1-29-2023


1-28-2023
    Upload SIISAE
    
1-25-2023
    Define fridays
    README.md: Explain how to log in to git and how to clone the repo.
    Print exam and lists

--------------------------------------------------------
                        SEQUENCE
--------------------------------------------------------
Sequence of lectures.

January
30. Exam and welcome
31. Introduction to IoT, git clone and set up.

February
01. Internet lecture 
02.

--------------------------------------------------------
                        LECTURES
--------------------------------------------------------
Lectures updates

1-24-2024 
    * PROJECT STARTED
1-25-2024 
    * 

- WEB DEV [Frontend]
    * HTML: Add exercises
    * CSS: Add bootstrap lecture and exercises
    * JS: Start lecture
    * Frameworks: Angular & React
    * UIX?

- WEB DEB [Backend]
    * Define django or flask
    * After define framework add DB

- GIT
    * Document with GIT commands
    * Update lecture:
        + Introduction
        + Merge 
        + Rebase
        + Reset
    * Add exercises

- PYTHON
    * Start lecture

- INTERNET
    * Add lecture
    * Add wireless section:
        + MQTT

- ESP32
    *

- RASPBERRY
    * 

- PROJECT:
{   Code: {
    1: MUCKUP
}
    Investigation:{
        /* Add all points to research
    }
}

--------------------------------------------------------
                        OTHER
--------------------------------------------------------
Not so important to do.

* ADD TO README.md
* Update lectures.md
* ADD SEQUENCE TO README.md
* Buy raspberry 5
* MACHINE LEARNING LECTURE ???


2. Understanding Python Syntax and Semantics

    Hello, World!: Start with the classic "Hello, World!" program to understand the basics of Python syntax.

python

print("Hello, World!")

    Comments: Learn to use comments to describe your code. Single-line comments start with #, and multi-line comments can be enclosed in triple quotes (""" or ''').
    Variables and Data Types: Understand how to declare variables and use basic data types: integers (int), floating-point numbers (float), strings (str), and booleans (bool).

3. Working with Data Structures

    Lists: Use lists to store collections of items. Learn about list operations, such as indexing, slicing, appending, and removing items.
    Dictionaries: Understand dictionaries for storing key-value pairs. Practice adding, removing, and accessing elements by key.
    Sets and Tuples: Learn the basics of sets (unordered collections of unique elements) and tuples (immutable sequences).

4. Control Flow

    Conditional Statements: Use if, elif, and else statements to execute different blocks of code based on certain conditions.
    Loops: Master the use of for loops for iterating over sequences and while loops for repeating code as long as a condition is true.

5. Functions

    Defining Functions: Learn how to define your own functions using the def keyword. Understand how to pass information to functions using parameters and return values from functions using return.
    Scope and Lifetime of Variables: Understand the difference between local and global variables and their scope within a program.

6. Basic File Handling

    Reading from a File: Learn how to open and read the contents of a file using built-in functions like open() and methods like .read() and .readlines().
    Writing to a File: Practice writing to files using modes like 'w' (write) and 'a' (append).